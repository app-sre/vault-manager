---
# Source: vault-manager/templates/template.yaml
apiVersion: v1
kind: Template
metadata:
  name: vault-manager
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: vault-manager
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: vault-manager
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "vault-manager design does not adequately account for multiple replicas"
      ignore-check.kube-linter.io/no-readiness-probe: "vault-manager is not getting traffic"
      ignore-check.kube-linter.io/no-liveness-probe: "vault-manager is monitored for being stuck"
    name: vault-manager
  spec:
    replicas: ${{REPLICAS}}
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: vault-manager
    template:
      metadata:
        labels:
          app: vault-manager
          component: qontract-reconcile
      spec:
        serviceAccountName: vault-manager
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  key: slack.webhook_url
                  name: ${APP_INTERFACE_SECRET_NAME}
            - name: SLACK_CHANNEL
              value: ${SLACK_CHANNEL}
            - name: SLACK_ICON_EMOJI
              value: ${SLACK_ICON_EMOJI} 
            - name: LOG_GROUP_NAME
              valueFrom:
                secretKeyRef:
                  name: ${CLOUDWATCH_SECRET}
                  key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>
            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[${INTEGRATION_NAME}] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ${INTEGRATION_NAME}
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: vault-manager
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: 
          - "-c"
          - "/vault-manager -dry-run=${DRY_RUN} -run-once=${RUN_ONCE} -thread-pool-size=${THREAD_POOL_SIZE}"
          env:
          - name: GRAPHQL_QUERY_FILE
            value: ${GRAPHQL_QUERY_FILE}
          - name: DISABLE_IDENTITY
            value: ${DISABLE_IDENTITY}
          - name: RECONCILE_SLEEP_TIME
            value: ${RECONCILE_SLEEP_TIME}
          - name: METRICS_SERVER_PORT
            value: ${METRICS_SERVER_PORT}
          - name: GRAPHQL_SERVER
            valueFrom:
              secretKeyRef:
                key: endpoint_url
                name: ${GQL_SECRET_NAME}
          - name: GRAPHQL_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: ${GQL_SECRET_NAME}
          - name: GRAPHQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${GQL_SECRET_NAME}
          - name: VAULT_ADDR
            value: ${VAULT_ADDR}
          - name: VAULT_AUTHTYPE
            valueFrom:
              secretKeyRef:
                key: auth_type
                name: ${VAULT_SECRET_NAME}
          - name: VAULT_ROLE_ID
            valueFrom:
              secretKeyRef:
                key: role_id
                name: ${VAULT_SECRET_NAME}
          - name: VAULT_SECRET_ID
            valueFrom:
              secretKeyRef:
                key: secret_id
                name: ${VAULT_SECRET_NAME}
          resources:
            requests:
              memory: ${MEMORY_REQUESTS}
              cpu: ${CPU_REQUESTS}
            limits:
              memory: ${MEMORY_LIMIT}
              cpu: ${CPU_LIMIT}
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: ${FLUENTD_MEMORY_REQUEST}
              cpu: ${FLUENTD_CPU_REQUEST}
            limits:
              memory: ${FLUENTD_MEMORY_LIMIT}
              cpu: ${FLUENTD_CPU_LIMIT}
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
parameters:
- name: IMAGE
  value: quay.io/app-sre/vault-manager
  displayName: vault-manager image
  description: vault-manager docker image. Defaults to quay.io/app-sre/vault-manager
- name: IMAGE_TAG
  value: latest
  displayName: vault-manager version
  description: vault-manager version which defaults to latest
- name: MEMORY_REQUESTS
  value: 150Mi
- name: MEMORY_LIMIT
  value: 250Mi
- name: CPU_REQUESTS
  value: 100m
- name: CPU_LIMIT
  value: 200m
- name: REPLICAS
  value: '3'
- name: RECONCILE_SLEEP_TIME
  value: '15m'
- name: DRY_RUN
  description: runs vault-manager in dry-run mode when true
  value: 'false'
- name: RUN_ONCE
  description: exits after one reconciliation attempt when true
  value: 'true'
- name: METRICS_SERVER_PORT
  description: port to begin http server on that exposes /metrics
  value: '9090'
- name: VAULT_SECRET_NAME
  value: vault-creds
- name: APP_INTERFACE_SECRET_NAME
  value: app-interface
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
- name: GQL_SECRET_NAME
  value: gql-creds
- name: THREAD_POOL_SIZE
  value: '10'
- name: GRAPHQL_QUERY_FILE
  value: '/query.graphql'
- name: VAULT_ADDR
  description: vault endpoint URL
  value: ''
- name: DISABLE_IDENTITY
  description: disables entity and group toplevels when set
  value: ''
- name: BUSYBOX_IMAGE
  value: quay.io/app-sre/ubi8-ubi-minimal
- name: BUSYBOX_IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE_PULL_POLICY
  value: Always
- name: FLUENTD_IMAGE
  value: quay.io/app-sre/fluentd
- name: FLUENTD_IMAGE_TAG
  value: latest
- name: FLUENTD_IMAGE_PULL_POLICY
  value: Always
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: INTEGRATION_NAME
  value: vault-manager
- name: FLUENTD_CPU_LIMIT
  value: 25m
- name: FLUENTD_MEMORY_LIMIT
  value: 120Mi
- name: FLUENTD_CPU_REQUEST
  value: 15m
- name: FLUENTD_MEMORY_REQUEST
  value: 30Mi
- name: LOG_FILE_LOCATION
  value: /fluentd/log/integration.log
