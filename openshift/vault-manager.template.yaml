apiVersion: v1
kind: Template
metadata:
  name: vault-manager
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: vault-manager
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: vault-manager
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "vault-manager design does not adequately account for multiple replicas"
      ignore-check.kube-linter.io/no-readiness-probe: "vault-manager is not getting traffic"
      ignore-check.kube-linter.io/no-liveness-probe: "TODO: https://issues.redhat.com/browse/APPSRE-5919"
    name: vault-manager
  spec:
    replicas: ${{REPLICAS}}
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: vault-manager
    template:
      metadata:
        labels:
          app: vault-manager
      spec:
        serviceAccountName: vault-manager
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: vault-manager
          command: ["/bin/sh"]
          args: 
          - "-c"
          - "while true; do /vault-manager -dry-run=${DRY_RUN} -metrics=${METRICS} -thread-pool-size=${THREAD_POOL_SIZE}; sleep ${RECONCILE_SLEEP_TIME}; done;"
          env:
          - name: GRAPHQL_QUERY_FILE
            value: ${GRAPHQL_QUERY_FILE}
          - name: DISABLE_IDENTITY
            value: ${DISABLE_IDENTITY}
          - name: GRAPHQL_SERVER
            valueFrom:
              secretKeyRef:
                key: endpoint_url
                name: ${GQL_SECRET_NAME}
          - name: GRAPHQL_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: ${GQL_SECRET_NAME}
          - name: GRAPHQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: ${GQL_SECRET_NAME}
          - name: VAULT_ADDR
            value: ${VAULT_ADDR}
          - name: VAULT_AUTHTYPE
            valueFrom:
              secretKeyRef:
                key: auth_type
                name: ${VAULT_SECRET_NAME}
          - name: VAULT_ROLE_ID
            valueFrom:
              secretKeyRef:
                key: role_id
                name: ${VAULT_SECRET_NAME}
          - name: VAULT_SECRET_ID
            valueFrom:
              secretKeyRef:
                key: secret_id
                name: ${VAULT_SECRET_NAME}
          - name: PUSH_GATEWAY_URL
            valueFrom:
              secretKeyRef:
                key: url
                name: ${PUSH_GATEWAY_SECRET_NAME}
          resources:
            requests:
              memory: ${MEMORY_REQUESTS}
              cpu: ${CPU_REQUESTS}
            limits:
              memory: ${MEMORY_LIMIT}
              cpu: ${CPU_LIMIT}
parameters:
- name: IMAGE
  value: quay.io/app-sre/vault-manager
  displayName: vault-manager image
  description: vault-manager docker image. Defaults to quay.io/app-sre/vault-manager
- name: IMAGE_TAG
  value: latest
  displayName: vault-manager version
  description: vault-manager version which defaults to latest
- name: MEMORY_REQUESTS
  value: 25Mi
- name: MEMORY_LIMIT
  value: 100Mi
- name: CPU_REQUESTS
  value: 25m
- name: CPU_LIMIT
  value: 100m
- name: REPLICAS
  value: '3'
- name: RECONCILE_SLEEP_TIME
  value: '15m'
- name: DRY_RUN
  description: runs vault-manager in dry-run mode when true
  value: 'false'
- name: METRICS
  description: runs vault-manager with metric exporting enabled
  value: 'false'
- name: VAULT_SECRET_NAME
  value: vault-creds
- name: GQL_SECRET_NAME
  value: gql-creds
- name: THREAD_POOL_SIZE
  value: '10'
- name: GRAPHQL_QUERY_FILE
  value: '/query.graphql'
- name: VAULT_ADDR
  description: vault endpoint URL
  value: ''
- name: PUSH_GATEWAY_SECRET_NAME
  value: push-gateway-auth-url
- name: PUSH_GATEWAY_URL
  description: prometheus pushgateway endpoint with basic auth
  value: ''
- name: DISABLE_IDENTITY
  description: disables entity and group toplevels when set to string value "true"
  value: ''
